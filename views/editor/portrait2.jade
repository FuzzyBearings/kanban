extends ../layout

block content

	ol.breadcrumb
		li
			a(href="/w/families") All Families
		if remoteFamily
			li
				a(href='/w/families/#{remoteFamily._id}') #{remoteFamily.name}
			if remoteGroup
				li
					a(href='/w/groups/#{remoteGroup._id}') #{remoteGroup.name}
				if remoteBoard
					li
						a(href='/w/boards/#{remoteBoard._id}') #{remoteBoard.name}
					if remoteColumn
						li
							a(href='/w/boards/#{remoteBoard._id}') #{remoteColumn.name}
						if remoteCard
							li
								a(href='/w/boards/#{remoteBoard._id}') #{remoteCard.name}
							if remoteComment
								li
									a(href='/w/boards/#{remoteBoard._id}') #{remoteComment.name}

	nav(class="navbar navbar-default")
		ul(class="nav navbar-nav")
			li.dropdown
				a(href="#", 
				  class="dropdown-toggle",
				  data-toggle="dropdown",
				  role="button",
				  aria-haspopup="true"
				  aria-expanded="false") Family
					span.caret
				ul(class="dropdown-menu")
					li
						a(href="/w/families") All Families
					li.divider(role="separator")
					if remoteFamilies && remoteFamilies.length > 0
						each family in remoteFamilies
							li
								a(href='/w/families/#{family._id}') #{family.name}
			if remoteGroups && remoteGroups.length > 0
				li.dropdown
					a(href="#", 
					  class="dropdown-toggle",
					  data-toggle="dropdown",
					  role="button",
					  aria-haspopup="true"
					  aria-expanded="false") Group
						span.caret
					ul(class="dropdown-menu")
						each group in remoteGroups
							li
								a(href='/w/groups/#{group._id}') #{group.name}					
			if remoteBoards && remoteBoards.length > 0
				li.dropdown
					a(href="#", 
					  class="dropdown-toggle",
					  data-toggle="dropdown",
					  role="button",
					  aria-haspopup="true"
					  aria-expanded="false") Board
						span.caret
					ul(class="dropdown-menu")
						each board in remoteBoards
							li
								a(href='/w/boards/#{board._id}') #{board.name}
			if remoteColumns && remoteColumns.length > 0
				li.dropdown
					a(href="#", 
					  class="dropdown-toggle",
					  data-toggle="dropdown",
					  role="button",
					  aria-haspopup="true"
					  aria-expanded="false") Column
						span.caret
					ul(class="dropdown-menu")
						each column in remoteColumns
							li
								a(href='/w/columns/#{column._id}') #{column.name}
			if remoteCards && remoteCards.length > 0
				li.dropdown
					a(href="#", 
					  class="dropdown-toggle",
					  data-toggle="dropdown",
					  role="button",
					  aria-haspopup="true"
					  aria-expanded="false") Card
						span.caret
					ul(class="dropdown-menu")
						each card in remoteCards
							li
								a(href='/w/cards/#{card._id}') #{card.name}
			if remoteComments && remoteComments.length > 0
				li.dropdown
					a(href="#", 
					  class="dropdown-toggle",
					  data-toggle="dropdown",
					  role="button",
					  aria-haspopup="true"
					  aria-expanded="false") Comment
						span.caret
					ul(class="dropdown-menu")
						each comment in remoteComments
							li
								a(href='/w/comments/#{comment._id}') #{comment.name}
			
	-
		var localFamily = { familyId : 0, "name" : "", sortOrder : 1 }
		if (remoteFamily) {
			localFamily.familyId = remoteFamily._id;
			localFamily.name = remoteFamily.name;
			localFamily.sortOrder = remoteFamily.sortOrder;
		}
		var familySortOrder = 1;
		if (remoteFamilies) {
			familySortOrder = remoteFamilies.length + 1;
		}

		var localGroup = { groupId : 0, "name" : "", sortOrder : 1, familyId : "0" }
		if (remoteGroup) {
			localGroup.groupId = remoteGroup._id;
			localGroup.name = remoteGroup.name;
			localGroup.sortOrder = remoteGroup.sortOrder;
			localGroup.familyId = remoteGroup.familyId;
		}
		var groupSortOrder = 1;
		if (remoteGroups) {
			groupSortOrder = remoteGroups.length + 1;
		}

		var localBoard = { boardId : 0, "name" : "", sortOrder : 1, groupId : "0" }
		if (remoteBoard) {
			localBoard.boardId = remoteBoard._id;
			localBoard.name = remoteBoard.name;
			localBoard.sortOrder = remoteBoard.sortOrder;
			localBoard.groupId = remoteBoard.groupId;
		}
		var boardSortOrder = 1;
		if (remoteBoards) {
			boardSortOrder = remoteBoards.length + 1;
		}
				
	-
		var localColumn = { columnId : 0, "name" : "", sortOrder : 1, boardId : "0" }
		if (remoteColumn) {
			localColumn.boardId = remoteColumn._id;
			localColumn.name = remoteColumn.name;
			localColumn.sortOrder = remoteColumn.sortOrder;
			localColumn.boardId = remoteColumn.boardId;
		}
		var columnSortOrder = 1;
		if (remoteColumns) {
			columnSortOrder = remoteColumns.length + 1;
		}
		
		var localCard = { cardId : 0, "name" : "", sortOrder : 1, columnId : "0" }
		if (remoteCard) {
			localCard.cardId = remoteCard._id;
			localCard.name = remoteCard.name;
			localCard.sortOrder = remoteCard.sortOrder;
			localCard.columnId = remoteCard.columnId;
		}
		var cardSortOrder = 1;
		if (remoteCards) {
			cardSortOrder = remoteCards.length + 1;
		}

		var localComment = { commentId : 0, "name" : "", sortOrder : 1, cardId : "0" }
		if (remoteComment) {
			localComment.commentId = remoteComment._id;
			localComment.name = remoteComment.name;
			localComment.sortOrder = remoteComment.sortOrder;
			localComment.cardId = remoteComment.cardId;
		}
		var commentSortOrder = 1;
		if (remoteComments) {
			commentSortOrder = remoteComments.length + 1;
		}
		
	table.top-level
		tr
			if remoteBoard
				th
					h1 Column
				if remoteColumn
					th
						h1 Card
					if remoteCard
						th
							h1 Comment

		tr
			if remoteBoard
				td
					if remoteColumns && remoteColumns.length > 0
						each column in remoteColumns
							form(method="post", action="/w/columns/update", class="editing-form")
								input(type="hidden", name="boardId", value="#{column.boardId}")
								input(type="hidden", name="columnId", value="#{column._id}")
								input(type="hidden", name="sortOrder", value="#{column.sortOrder}")
								.input-group
									input(type='text', name='name', value="#{column.name}" class="form-control" placeholder="Column Name")
									.input-group-btn
										button(type="submit", class="btn btn-default") submit
					form(method="post", action="/w/columns/update", class="form-inline")
						input(type="hidden", name="boardId", value="#{remoteBoard._id}")
						input(type="hidden", name="columnId", value="0")
						input(type="hidden", name="sortOrder", value="#{columnSortOrder}")
						.input-group
							input(name="name" value="", placeholder="Column Name", type="text", class="form-control")
							.input-group-btn
								button(type="submit", class="btn btn-default") submit

			if remoteColumn
				td
					if remoteCards && remoteCards.length > 0
						each card in remoteCards
							form(method="post", action="/w/cards/update", class="editing-form")
								input(type="hidden", name="columnId", value="#{card.columnId}")
								input(type="hidden", name="cardId", value="#{card._id}")
								input(type="hidden", name="sortOrder", value="#{card.sortOrder}")
								.input-group
									input(type='text', name='name', value="#{card.name}" class="form-control" placeholder="Card Name")
									.input-group-btn
										button(type="submit", class="btn btn-default") submit
					form(method="post", action="/w/cards/update", class="form-inline")
						input(type="hidden", name="columnId", value="#{remoteColumn._id}")
						input(type="hidden", name="cardId", value="0")
						input(type="hidden", name="sortOrder", value="#{cardSortOrder}")
						.input-group
							input(name="name" value="", placeholder="Card Name", type="text", class="form-control")
							.input-group-btn
								button(type="submit", class="btn btn-default") submit

			if remoteCard
				td
					if remoteComments && remoteComments.length > 0
						each comment in remoteComments
							form(method="post", action="/w/comments/update", class="editing-form")
								input(type="hidden", name="cardId", value="#{comment.cardId}")
								input(type="hidden", name="commentId", value="#{comment._id}")
								input(type="hidden", name="sortOrder", value="#{comment.sortOrder}")
								.input-group
									input(type='text', name='name', value="#{comment.name}" class="form-control" placeholder="Comment Name")
									.input-group-btn
										button(type="submit", class="btn btn-default") submit
					form(method="post", action="/w/comments/update", class="form-inline")
						input(type="hidden", name="cardId", value="#{remoteCard._id}")
						input(type="hidden", name="commentId", value="0")
						input(type="hidden", name="sortOrder", value="#{commentSortOrder}")
						.input-group
							input(name="name" value="", placeholder="Comment Name", type="text", class="form-control")
							.input-group-btn
								button(type="submit", class="btn btn-default") submit
